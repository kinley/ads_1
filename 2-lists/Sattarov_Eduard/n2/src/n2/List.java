package n2;

import java.util.Scanner;//ввод с клавиатуры

public class List
{
	private int i;//коэффициент перед X
	private int a;//коэффициент перед cos
	private int b;//коэффициент перед sin
	private List next;//следующий узел или ничто
	private List prev;//пердыдущий узел или ничто
	private List head;//начало списка
	
	public List()//конструктор
	{
		this.next=null;//стандартно указатели на следущее и предыдущее смотрят на ничто
		this.prev=null;
	}
	public List(int i, int a, int b)//конструктор c инициализацией "тройки"
	{
		this.i = i;//введенные значения стандартно записываются
		this.a = a;//в соответствующие поля класса
		this.b = b;
		this.next = null;//стандартно указатели на следущее и предыдущее смотрят на ничто
		this.prev = null;
	}
	public void AddNode2End(int i, int a, int b)//добавление узла в конец
	{
		List new3 = new List(i, a , b);//инициализируем новую "тройку"
		if(head == null)//если список не содержит узлов
		{
			head = new3;//начало списка теперь - "тройка"
		}
		else//если список уже содержит узлы
		{
			List step = head;//ставим указатель на начало списка
			while(step.next != null)//пока не дошли до конца
			{
				step = step.next;//смещаем указатель на что-то следующее (узел или ничто)
			}
			step.next = new3;//ставим в конец списка "тройку"
			step.next.prev = step;//связь в обратную сторону
		}
	}
	public void AddNode2Start(int i, int a, int b)//добавление узла в начало
	{
		List new3 = new List(i, a, b);//инициализируем новую "тройку"
		if(head == null)//если список не содержит узлов
		{
			head = new3;//начало списка теперь - "тройка"
		}
		else//если список уже содержит узлы
		{
			new3.next = head;//следующее для "тройки" - начало списка
			new3.next.prev = new3;//связь в обратную сторону
			head = new3;//"тройка" теперь - начало списка 
		}
	}
	/*public void AddNodeAfter(List q, int i, int a, int b)//оказалась ненужной здесь
	{
		List new3 = new List(i, a, b);
		if(q.next == null)
		{
			q.next = new3;
			q.next.prev = q;
		}
		else
		{
			new3.next = q.next;
			new3.next.prev = new3;
			q.next = new3;
			q.next.prev = q;
		}
	}*/
	public void AddNodeBefore(List q, int i, int a, int b)//вставка узла перед указанным
	{
		List new3 = new List(i, a, b);//инициализируем новую "тройку"
		if(q.prev == null)//если указатель смотрит на начало списка
		{
			q.prev = new3;//предыдущее нечто теперь - узел с новой "тройкой"
			q.prev.next = q;//связь в обратную сторону
			head = new3;//узел с "тройкой" теперь - начало списка
		}
		else//если указатель смотрит не на начло списка
		{
			new3.prev = q.prev;//предыдущее для "тройки" то, что предыдущее для указателя
			new3.prev.next = new3;//связь в обратную сторону
			q.prev = new3;//предыдущее для указателя теперь - узел с "тройкой"
			q.prev.next = q;//связь в обратную сторону
		}
	}
	public void DelNode(List q)//удаление указанного узла
	{
		if((q.next == null)&&(q.prev != null))//если указанный узел в конце списка
		{
			q = q.prev;//идем к предыдущему узлу
			q.next = null;//удаляем связь к указанному выше узлу
		}
		if((q.next != null)&&(q.prev == null))//если указанный узел в начале списка
		{
			q = q.next;//идем к следующему узлу
			q.prev = null;//удаляем связь к указанному выше узлу
			head = q;//переставляем начало, т.к. оно стояло на удаленном узле
		}
		if((q.next != null)&&(q.prev != null))//если указанный узел в середине списка
		{
			q.prev.next = q.next;//прошлый узел указывает на следующий через next
			q.next.prev = q.prev;//следующий узел указывает на предыдущий через prev
			q = q.prev;//переходим именно на предыдущий узел, иначе проскочим через 1
			           //и попадем в эксепшн, или просто не удалим следующий, если надо
		}
	}
	public void InputPolinom()//ввод "троек" i, a, b
	{
		int vmore = 1;//стандартно мы не отказались от ввода
		while(vmore == 1)//пока мы не отказались от ввода следующей "тройки"
		{
			System.out.print("Введите коэффициент радиан(i): ");
			Scanner sc = new Scanner(System.in);//ввод будет с клавиатуры
			int vi = sc.nextInt();
			System.out.print("Введите коэффициент косинуса(a): ");
			int va = sc.nextInt();
			System.out.print("Введите коэффициент синуса(b): ");
			this.AddNode2End(vi, va, sc.nextInt());//вставка тройки в конец списка
			System.out.print("Добавить еще тройку? 0/1: ");
			vmore = sc.nextInt();
		}
	}
	public void PlusPolinom(List p2)//сложение полиномов
	{
		List step = head;//cтавим указатель на начало списка
		while(step.next != null)//пока указатель смотрит на узел
		{
			step = step.next;//смещаем указатель на что-то следующее (узел или ничто)
		}
		step.next = p2.head;//дошли до конца 1, конец склеиваем с началом 2
		step.next.prev = step;//связь в обратную сторону
	}
	public void FindUseless()//нахождение узлов с одинаковыми коэффициентами при X
	{                        //нахождение узлов с нулевыми коэффициентами при cos/sin
		List i = head;//ставим указатель на начало списка
		while (i != null)//пока указатель смотрит на узел
		{
			List j = i.next;//с каждым увеличением "i", присваиваем "j" i+1,
			                //нет смысла проверять пары по 2 раза и эквивалентные пары
			while(j != null)//пока указатель смотрит на узел
			{
				if (i.i == j.i)//если у "троек" одинаковый коэффициент при X
				{
					i.a += j.a;//складываем коэффициенты при косинусах и синусах
					i.b += j.b;
					DelNode(j);//удаляем "тройку", значения которой мы сложили с другой
				}
				j = j.next;//смещаем указатель на что-то следующее (узел или ничто)
			}
			if ((i.a == 0)&&(i.b == 0))//если коэффициенты при cos/sin оба равны нулю
			{
				DelNode(i);//удаляем узел
			}
			i = i.next;//смещаем указатель на что-то следующее (узел или ничто)
		}
	}
	public void PrintPolinom()//вывод полинома
	{
		List pr = head;//ставим указатель на начало списка
		if(pr == null)//если в списке нет узлов
		{
			System.out.println("Полином пуст в результате сокращений");
		}
		else//если в списке есть узлы
		{
			while (pr != null)//пока указатель смотрит на узел
			{
				if(pr.next == null)//если элемент последний
				{
					if(pr.a == 0)//не выводить косинусы с нулевым коэффициентом
					{
						System.out.print(+pr.b+"sin("+pr.i+"x)");
					}
					if(pr.b == 0)//не выводить синусы с нулевым коэффициентом
					{
						System.out.print(pr.a+"cos("+pr.i+"x)");
					}
					if((pr.b != 0)&&(pr.a != 0))
					{
						System.out.print(pr.a+"cos("+pr.i+"x) + "+pr.b+"sin("+pr.i+"x)");
					}
				}
				else//если элемент не последний, вывести еще "+"
				{
					if(pr.a == 0)//не выводить косинусы с нулевым коэффициентом
					{
						System.out.print(+pr.b+"sin("+pr.i+"x) + ");
					}
					if(pr.b == 0)//не выводить синусы с нулевым коэффициентом
					{
						System.out.print(pr.a+"cos("+pr.i+"x) + ");
					}
					if((pr.b != 0)&&(pr.a != 0))
					{
						System.out.print(pr.a+"cos("+pr.i+"x) + "+pr.b+"sin("+pr.i+"x) + ");
					}
				}
				pr = pr.next;//смещаем указатель на что-то следующее (узел или ничто)
			}
			System.out.println("");//когда вывели весь полином, делаем отступ
		}
	}
}